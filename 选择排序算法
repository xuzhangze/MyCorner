#pragma once

#include "compare.hpp"

template <typename T>
void SelectSort(T *array, const int size)
{
	assert(NULL != array && size > 0);
	if(size == 1)
		return;
	for(int i = 0; i < (int)size-1; i++)
	{
		int sub = i;
		for(int j = i+1; j < (int)size; j++)
			if(Less<T>()(array[j], array[sub]))
				sub = j;
		if(sub != i)
			swap(array[i], array[sub]);
	}
}

void test4()
{
	int arr[100] = { 0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	srand((unsigned int)time(0));
	for(int i = 0; i < sz; i++)    //Assign values with random numbers
	{
		arr[i] = rand() % sz;
	}
	for(int i = 0; i < sz; i++)    //print array
		cout << arr[i] << " ";
	cout << endl << endl << endl << "sort:" << endl;
	SelectSort(arr, sz);
	for(int i = 0; i < sz; i++)    //print array
		cout << arr[i] << " ";
	cout << endl;
	for(int i = 1; i < sz; i++)  //check that the sort is correct
	{
		if(Less<int>()(arr[i], arr[i-1]))
			cout << "insert sort error! " << i << endl;
	}
}
