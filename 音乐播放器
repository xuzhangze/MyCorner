/*************************************************************************
	> File Name: test.c
	> Author: 
	> Mail: 
	> Created Time: 2018年07月02日 星期一 11时07分16秒
 ************************************************************************/

#include<stdio.h>
#include <sys/types.h>
#include <dirent.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>

typedef struct node_ node_t;
struct node_
{
    char *name;           //歌曲名字
    node_t *prev;
    node_t *next;
};

node_t *head = NULL;
node_t *cur = NULL;
int first = 1;

enum{STOP, PAUSE, PLAY};
int status = STOP;

void list_init(void)
{
    head = malloc(sizeof(node_t));
    memset(head, 0x00, sizeof(node_t));
    head->next = head->prev = head;
}

void list_insert(const char* name)
{
    node_t *p = malloc(sizeof(node_t));
    memset(p, 0x00, sizeof(node_t));

    p->name = malloc(strlen(name)+1);
    strcpy(p->name, name);

    p->next = head->next;
    p->prev = head;
    head->next->prev = p;
    head->next = p;
}

void list_show(void)
{
    node_t *p = head->next;

    printf("+------------------------------------------+\n");
    while(p != head)
    {
        printf("%s ", p->name);
        if(p == cur)
            printf("<==cur");
        printf("\n");
        p = p->next;
    }
    printf("+------------------------------------------+\n");
}

void load_music(const char* path)
{
    DIR* pdir = opendir(path);
    if(pdir == NULL)
    {
        perror("opendir");
        exit(1);
    }

    struct dirent *p = NULL;
    while((p=readdir(pdir)) != NULL)
    {
        if(p->d_name[0] == '.')
            continue;
        list_insert(p->d_name);
    }

    closedir(pdir);
}
void music_player()
{
    if(NULL == head)
        return;

    char* path = "/home/xzz/桌面/mp3/music/music.sh";
    printf("%s\n", path);
    node_t *pCur = head->next;
    int input[2];
    pipe(input);

    printf("fork\n");
    pid_t pid = fork();
    if(pid < 0)
    {
        perror("fork");
        return;
    }
    else if(pid > 0)   //父进程
    {
        close(input[0]);
        /*
        char* pch = pCur->name;
        while(*pch != '\0')
        {
            read(input[1], pch, 1);
        }*/
        read(input[1], pCur->name, strlen(pCur->name));

        waitpid(pid, NULL, 0);
        close(input[1]);
    }
    else    //子进程
    {
        close(input[1]);
        dup2(input[0], 0);

        execl(path, path, NULL);
        close(input[0]);
        exit(1);
    }
}

int menu(void)
{
    printf("+-------------------------------------+\n");
    printf("+----------1. play/pause--------------+\n");
    printf("+----------2. next      --------------+\n");
    printf("+----------3. prev      --------------+\n");
    printf("+----------4. stop      --------------+\n");
    printf("+----------0. exit      --------------+\n");
    printf("+-------------------------------------+\n");
    list_show();
    int choose;
    do
    {
        printf(">");
        scanf("%d", &choose);
        if(choose >= 0 && choose <= 4)
            break;
        printf("choose invalid\n");
        while(getchar() != '\n');
    }while(1);

    return choose;
}
void playPause()
{
    if(first == 1)
    {
        char buf[1024] = {};
        sprintf(buf, "madplay -o wav:- ./music/%s 2> /dev/null | aplay 2> /dev/null &", cur->name);
        system(buf);
        first = 0;
        status = PLAY;
    }
    else
    {
        if(status == PLAY)
        {
            system("killall -SIGSTOP aplay");
            status = PAUSE;
        }
        else
        {
            system("killall -SIGCONT aplay");
            status = PLAY;
        }
    }
}

void stop()
{
    if(first == 0)
    {
        system("killall -SIGKILL aplay");
        first = 1;
    }
}
void next()
{
    stop();
    cur = cur->next;
    if(cur == head)
        cur = cur->next;
    playPause();
}
void prev()
{

    stop();
    cur = cur->prev;
    if(cur == head)
        cur = cur->prev;
    playPause();
}

int main()
{
    list_init();
    load_music("/home/xzz/桌面/mp3/music/");
    if(head->next != head)
        cur = head->next;
    //music_player();
    int choose;
    do
    {
        choose = menu();
        switch(choose)
        {
            case 1:
                playPause();
                break;
            case 2:
                next();
                break;
            case 3:
                prev();
                break;
            case 4:
                stop();
                break;
            case 0:
                printf("谢谢欣赏\n");
                system("killall -SIGKILL aplay");
                exit(0);
                break;
        }

    }while(choose);
    


    //list_show();
    return 0;
}
