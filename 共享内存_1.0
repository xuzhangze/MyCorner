Makefile：
.PHONY : all
all : server client

server : server.c comm.c
	gcc -o server server.c comm.c

client : client.c comm.c
	gcc -o client client.c comm.c

.PHONY : clean
clean :
	rm -f server client
  
  comm.h：
  #ifndef __COMM_H_
#define __COMM_H_

#include <stdio.h>
#include <stdlib.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/types.h>

#define PATHNAME "."
#define PROJ_ID 0x6666

int CreatShm(int size);
int GetShm(int size);
int DelShm(int shmid);

#endif //__COMM_H_

comm.c：
#include "comm.h"

static int _GetCommShm(int size, int flag)
{
	key_t key = ftok(PATHNAME, PROJ_ID);
	if(key < 0)
	{
		printf("ftok\n");
		return -1;
	}

	int shmid = shmget(key, size, flag);
	if(shmid < 0)
		printf("shmget\n");
	return shmid;
}

int CreatShm(int size)
{
	return _GetCommShm(size, IPC_CREAT|IPC_EXCL|0666);	
}

int GetShm(int size)
{
	return _GetCommShm(size, IPC_CREAT);	
}

int DelShm(int shmid)
{
	return shmctl(shmid, IPC_RMID, NULL);
}

server.c：
#include "comm.h"

int main()
{
	int shmid = CreatShm(4096);
	if(shmid < 0)
	{
		printf("CreatShm\n");
		exit(EXIT_FAILURE);
	}
	char *addr = shmat(shmid, NULL, 0);
	int i = 0;
	while(i++ < 20)
	{
		printf("%s%d\n", addr, i);
		sleep(1);
	}
	sleep(2);
	shmdt(addr);
	DelShm(shmid);

	return 0;
}

client.c：
#include "comm.h"

int main()
{
	int shmid = GetShm(4096);
	if(shmid < 0)
	{
		printf("GetShm\n");
		exit(EXIT_FAILURE);
	}
	char *addr = shmat(shmid, NULL, 0);
	int i = 0;
	while(i < 20)
	{
		printf("%d\n", i);
		addr[i] = 'A';
		i++;
		addr[i] = 0;
		sleep(1);
	}
	shmdt(addr);

	return 0;
}
